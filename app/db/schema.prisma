generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String    @id
  name      String
  teamId    String
  team      Team      @relation(fields: [teamId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  projects  Project[]

  @@map("clients")
}

model Project {
  id          String    @id
  name        String
  startedAt   DateTime
  endedAt     DateTime?
  description String
  teamId      String
  team        Team      @relation(fields: [teamId], references: [id])
  clientId    String
  client      Client    @relation(fields: [clientId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  skills      Skill[]

  @@map("projects")
}

model Skill {
  id        String   @id
  name      String
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
}

model Team {
  id         String     @id
  name       String
  members    User[]
  roles      TeamRole[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  deletedAt  DateTime?
  projects   Project[]
  clients    Client[]
  isPersonal Boolean

  @@map("teams")
}

enum Role {
  ADMIN
  MEMBER
}

model TeamRole {
  userId    String
  teamId    String
  team      Team      @relation(fields: [teamId], references: [id])
  role      Role      @default(MEMBER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@unique([userId, teamId, role])
  @@map("user_roles")
}

model User {
  id        String    @id
  email     String    @unique
  teams     Team[]
  firstName String
  lastName  String
  photoUrl  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("users")
}
